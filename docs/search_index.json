[["index.html", "Modelling lucerne growth and development under dryland conditions What is this book for? Acknowledgements License", " Modelling lucerne growth and development under dryland conditions Jian (AKA Frank) Liu 2021-08-29 What is this book for? This book is a supplementary material for my master studying on the Agricultural Production Systems sIMulator next generation (APSIMX). Why a book? I want to document the rational about the critical decision I made along the way. At least in a code format so that I may recall in the future. Looks nice and easy to share with others. Github is free to host it. About the masters project The project aims to understand Lucerne or Alfalfa performance under water deficit conditions in New Zealand and seek alternative ways for parameterising the APSIMx-Lucerne model. About me Im a Data Scientist work in a reseach insititute called Plant and Food Research in New Zealand. I am also doing my master thesis at Lincoln University as a part-time student. The research topic I proposed covers three different subjects: plant, soil and data science. After graduated from an agricultural degree, I picked up data science skills through the working experience and grow my passion in the applications of data science on investigating the interaction between plants and environments. This blog was created as a documentation site for the master study. Contents may range from tips and tricks in programming tools like R and Python to errors and solutions for specific modelling framework such as APSIM Next Generation. Some random thoughts might also come along every now and then.  Acknowledgements I wouldnt make this far without the following friends: License "],["intro.html", "Chapter 1 Introduction", " Chapter 1 Introduction The eventual goal is to have an APSUMX-Lucerne model to simulate lucerne yield under dryland conditions. Then we can use it to do what if scenario experiments in silico. (Teixeira et al. 2020) developed the concept of using APSIMX models and Rshiny to explore effects of management on crop performance and potential environmental outcomes. Figure 1.1 demonstrates an example of lucerne yield map under optimal conditions. A robust lucerne model is essential to achieve this goal. The master project is set up to start the journey of having such model. However, I only scratched the surface of APSIMX model development for incoporating water deficit mechanism and the model is still far from production ready. Figure 1.1: A demonstration yield map generated by robust Lucerne model. Reference a figure by its code chunk label with the fig: prefix, e.g., see Figure . Similarly, you can reference tables generated from knitr::kable(), e.g., see Table ??. References "],["literature.html", "Chapter 2 Literature", " Chapter 2 Literature Here is a review of existing methods. "],["methods.html", "Chapter 3 Methods", " Chapter 3 Methods We describe our methods in this chapter. "],["soil-water.html", "Chapter 4 Soil Water 4.1 Aim of this document 4.2 Experiment details 4.3 Forming a function 4.4 Model2 4.5 Test the function 4.6 WHAT IS MY ESTIMATED DULs? 4.7 How much different it made? 4.8 OUTPUT ALL THE GRAPHS 4.9 The final version workflow for DUL, LL and SW via average max and min. 4.10 Examine the DUL and LL with original observations 4.11 20200513 kls 4.12 20200515 More fitting trys 4.13 Curve fitting is not going to work 4.14 Evapotranspiration surface 4.15 Biomass Overview 4.16 Root Overview", " Chapter 4 Soil Water 4.1 Aim of this document Explore the soil water data Try if multiple change point analysis could help to estimate DUL 4.2 Experiment details 2 years experiment. 2 sites Lincoln Uni Ashely Dene 10 sowing date in both sites. five sowing date in the first year five sowing date in second year Year 1 (Seedling crop) Year 2 (Seedling &amp; Regrowth) SD1, SD2, SD3, SD4, SD5 The first five sowing date Regrowth SD6, SD7, SD8, SD9, SD10 Note: The setup helps to compare the seedling and regrowth in the same conditions in Year 2. 1 cultivar. 4 reps each site. 2 soil types stone free - plant available water capaciy (PAWC) 360mm/2.3m stony - PAWC 240/2.3m This type is for a grazing trial. probably not a good idea for a starting? very stony 130mm/2.3m 22 layers of soil water measurements - 10 cm interval below top 20 cm top 20 cm was measured by TDR. remaining 21 layers was meastured by Neutron probe 1 follow treat in both sites - absolute soil evaporation AD I12 SD1 21-Oct-10 4-Oct-10 SD2 9-Nov-10 4-Nov-10 SD3 8-Dec-10 2-Dec-10 SD4 13-Jan-11 10-Jan-11 SD5 3-Feb-11 7-Feb-11 SD6 10-Oct-11 10-Oct-11 SD7 7-Nov-11 7-Nov-11 SD8 9-Dec-11 9-Dec-11 SD9 10-Jan-12 10-Jan-12 SD10 17-Feb-12 17-Feb-12 ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Experiment SowingDate Clock.Today DAS Depth SW DUL relativeSW ## 1: AshleyDene SD1 2010-10-21 0 1 0.130 0.270 0.4814815 ## 2: AshleyDene SD1 2010-11-09 19 1 0.204 0.270 0.7555556 ## 3: AshleyDene SD2 2010-11-09 0 1 0.205 0.275 0.7454545 ## 4: AshleyDene SD1 2010-11-16 26 1 0.169 0.270 0.6259259 ## 5: AshleyDene SD2 2010-11-16 7 1 0.181 0.275 0.6581818 ## --- ## 12910: Iversen12 SD10 2012-04-21 565 22 0.299 0.316 0.9462025 ## 12911: Iversen12 SD10 2012-05-08 582 22 0.300 0.316 0.9493671 ## 12912: Iversen12 SD10 2012-05-24 598 22 0.303 0.316 0.9588608 ## 12913: Iversen12 SD10 2012-06-05 610 22 0.303 0.316 0.9588608 ## 12914: Iversen12 SD10 2012-06-21 626 22 0.303 0.316 0.9588608 ## `geom_smooth()` using method = &#39;gam&#39; and formula &#39;y ~ s(x, bs = &quot;cs&quot;)&#39; Subset the autum rain ## Experiment SowingDate Clock.Today DAS Depth SW DUL relativeSW ## 1: AshleyDene SD4 2011-07-28 196 1 0.300 0.300 1.0000000 ## 2: AshleyDene SD4 2011-04-19 96 1 0.288 0.300 0.9600000 ## 3: AshleyDene SD4 2011-06-14 152 1 0.288 0.300 0.9600000 ## 4: AshleyDene SD4 2011-06-25 163 1 0.284 0.300 0.9466667 ## 5: AshleyDene SD5 2011-06-25 142 1 0.283 0.283 1.0000000 ## --- ## 4440: AshleyDene SD2 2012-02-15 463 12 0.064 0.111 0.5765766 ## 4441: AshleyDene SD2 2012-02-28 476 14 0.064 0.123 0.5203252 ## 4442: AshleyDene SD5 2012-02-15 377 8 0.063 0.106 0.5943396 ## 4443: AshleyDene SD3 2012-02-01 420 10 0.063 0.104 0.6057692 ## 4444: AshleyDene SD3 2012-02-28 447 10 0.063 0.104 0.6057692 ## `geom_smooth()` using method = &#39;loess&#39; and formula &#39;y ~ x&#39; ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. Define a model for multi change points analysis ## Parallel sampling in progress... ## Warning: Strategy &#39;multiprocess&#39; is deprecated in future (&gt;= 1.20.0). Instead, ## explicitly specify either &#39;multisession&#39; or &#39;multicore&#39;. In the current R ## session, &#39;multiprocess&#39; equals &#39;multisession&#39;. ## Finished sampling in 40.4 seconds ## name mean lower upper Rhat n.eff ## 1: int_1 0.8768554 0.866814 0.8866994 1.000553 3287 ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## name mean lower upper Rhat n.eff ## 1: int_1 0.9085217 0.851158 0.9648418 1.000729 1398 ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## name mean lower upper Rhat n.eff ## 1: int_1 0.9382836 0.9152289 0.9622015 1.001348 2960 4.3 Forming a function 4.4 Model2 4.5 Test the function ## Parallel sampling in progress... ## Finished sampling in 0.8 seconds ## Make a loop ## [[1]] ## Clock.Today DAS SW DUL relativeSW ## 1: 2011-04-07 168 0.226 0.27 0.8370370 ## 2: 2011-04-19 180 0.251 0.27 0.9296296 ## 3: 2011-04-29 190 0.210 0.27 0.7777778 ## 4: 2011-05-10 201 0.243 0.27 0.9000000 ## 5: 2011-05-21 212 0.204 0.27 0.7555556 ## 6: 2011-06-01 223 0.238 0.27 0.8814815 ## 7: 2011-06-14 236 0.255 0.27 0.9444444 ## 8: 2011-06-25 247 0.266 0.27 0.9851852 ## 9: 2011-07-28 280 0.265 0.27 0.9814815 ## 10: 2011-08-11 294 0.224 0.27 0.8296296 ## 11: 2011-08-25 308 0.206 0.27 0.7629630 ## 12: 2011-09-07 321 0.191 0.27 0.7074074 ## 13: 2011-09-21 335 0.165 0.27 0.6111111 ## 14: 2011-10-07 351 0.231 0.27 0.8555556 ## 15: 2011-10-21 365 0.241 0.27 0.8925926 ## 16: 2011-11-03 378 0.156 0.27 0.5777778 ## 17: 2011-11-16 391 0.188 0.27 0.6962963 ## 18: 2011-11-28 403 0.136 0.27 0.5037037 ## 19: 2011-12-12 417 0.170 0.27 0.6296296 ## 20: 2011-12-23 428 0.158 0.27 0.5851852 ## 21: 2012-01-05 441 0.084 0.27 0.3111111 ## 22: 2012-01-16 452 0.075 0.27 0.2777778 ## 23: 2012-02-01 468 0.102 0.27 0.3777778 ## 24: 2012-02-15 482 0.116 0.27 0.4296296 ## 25: 2012-02-28 495 0.160 0.27 0.5925926 ## 26: 2012-03-14 510 0.213 0.27 0.7888889 ## 27: 2012-03-25 521 0.168 0.27 0.6222222 ## 28: 2012-04-08 535 0.098 0.27 0.3629630 ## 29: 2012-04-22 549 0.138 0.27 0.5111111 ## Clock.Today DAS SW DUL relativeSW ## Parallel sampling in progress... ## Finished sampling in 0.9 seconds ## Parallel sampling in progress... ## Finished sampling in 0.9 seconds ## Parallel sampling in progress... ## Finished sampling in 0.9 seconds ## Parallel sampling in progress... ## Finished sampling in 0.8 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.4 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.3 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.4 seconds ## Parallel sampling in progress... ## Finished sampling in 0.4 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.8 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.4 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.8 seconds ## Parallel sampling in progress... ## Finished sampling in 0.8 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.8 seconds ## Parallel sampling in progress... ## Finished sampling in 0.8 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.4 seconds ## Parallel sampling in progress... ## Finished sampling in 0.4 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.4 seconds ## Parallel sampling in progress... ## Finished sampling in 0.3 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.3 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.8 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.8 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.4 seconds ## Parallel sampling in progress... ## Finished sampling in 0.4 seconds ## Parallel sampling in progress... ## Finished sampling in 0.4 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.4 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.4 seconds ## Parallel sampling in progress... ## Finished sampling in 0.3 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.8 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.8 seconds ## Parallel sampling in progress... ## Finished sampling in 0.8 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.3 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.8 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.8 seconds ## Parallel sampling in progress... ## Finished sampling in 0.4 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.8 seconds ## Parallel sampling in progress... ## Finished sampling in 0.9 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.4 seconds ## Parallel sampling in progress... ## Finished sampling in 0.3 seconds ## Parallel sampling in progress... ## Finished sampling in 0.4 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.4 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.3 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.4 seconds ## Parallel sampling in progress... ## Finished sampling in 0.4 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.4 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.4 seconds ## Parallel sampling in progress... ## Finished sampling in 0.3 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.4 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.3 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.4 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.4 seconds ## Parallel sampling in progress... ## Finished sampling in 0.4 seconds ## Parallel sampling in progress... ## Finished sampling in 0.3 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.6 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.7 seconds ## Parallel sampling in progress... ## Finished sampling in 0.5 seconds ## Parallel sampling in progress... ## Finished sampling in 0.4 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Parallel sampling in progress... ## Finished sampling in 0.2 seconds ## Process layer 1 ## Process layer 1 ## Process layer 1 ## Process layer 1 ## Process layer 1 ## Process layer 1 ## Process layer 1 ## Process layer 1 ## Process layer 1 ## Process layer 1 ## Process layer 2 ## Process layer 2 ## Process layer 2 ## Process layer 2 ## Process layer 2 ## Process layer 2 ## Process layer 2 ## Process layer 2 ## Process layer 2 ## Process layer 2 ## Process layer 3 ## Process layer 3 ## Process layer 3 ## Process layer 3 ## Process layer 3 ## Process layer 3 ## Process layer 3 ## Process layer 3 ## Process layer 3 ## Process layer 3 ## Process layer 4 ## Process layer 4 ## Process layer 4 ## Process layer 4 ## Process layer 4 ## Process layer 4 ## Process layer 4 ## Process layer 4 ## Process layer 4 ## Process layer 4 ## Process layer 5 ## Process layer 5 ## Process layer 5 ## Process layer 5 ## Process layer 5 ## Process layer 5 ## Process layer 5 ## Process layer 5 ## Process layer 5 ## Process layer 5 ## Process layer 6 ## Process layer 6 ## Process layer 6 ## Process layer 6 ## Process layer 6 ## Process layer 6 ## Process layer 6 ## Process layer 6 ## Process layer 6 ## Process layer 6 ## Process layer 7 ## Process layer 7 ## Process layer 7 ## Process layer 7 ## Process layer 7 ## Process layer 7 ## Process layer 7 ## Process layer 7 ## Process layer 7 ## Process layer 7 ## Process layer 8 ## Process layer 8 ## Process layer 8 ## Process layer 8 ## Process layer 8 ## Process layer 8 ## Process layer 8 ## Process layer 8 ## Process layer 8 ## Process layer 8 ## Process layer 9 ## Process layer 9 ## Process layer 9 ## Process layer 9 ## Process layer 9 ## Process layer 9 ## Process layer 9 ## Process layer 9 ## Process layer 9 ## Process layer 9 ## Process layer 10 ## Process layer 10 ## Process layer 10 ## Process layer 10 ## Process layer 10 ## Process layer 10 ## Process layer 10 ## Process layer 10 ## Process layer 10 ## Process layer 10 ## Process layer 11 ## Process layer 11 ## Process layer 11 ## Process layer 11 ## Process layer 11 ## Process layer 11 ## Process layer 11 ## Process layer 11 ## Process layer 11 ## Process layer 11 ## Process layer 12 ## Process layer 12 ## Process layer 12 ## Process layer 12 ## Process layer 12 ## Process layer 12 ## Process layer 12 ## Process layer 12 ## Process layer 12 ## Process layer 12 ## Process layer 13 ## Process layer 13 ## Process layer 13 ## Process layer 13 ## Process layer 13 ## Process layer 13 ## Process layer 13 ## Process layer 13 ## Process layer 13 ## Process layer 13 ## Process layer 14 ## Process layer 14 ## Process layer 14 ## Process layer 14 ## Process layer 14 ## Process layer 14 ## Process layer 14 ## Process layer 14 ## Process layer 14 ## Process layer 14 ## Process layer 15 ## Process layer 15 ## Process layer 15 ## Process layer 15 ## Process layer 15 ## Process layer 15 ## Process layer 15 ## Process layer 15 ## Process layer 15 ## Process layer 15 ## Process layer 16 ## Process layer 16 ## Process layer 16 ## Process layer 16 ## Process layer 16 ## Process layer 16 ## Process layer 16 ## Process layer 16 ## Process layer 16 ## Process layer 16 ## Process layer 17 ## Process layer 17 ## Process layer 17 ## Process layer 17 ## Process layer 17 ## Process layer 17 ## Process layer 17 ## Process layer 17 ## Process layer 17 ## Process layer 17 ## Process layer 18 ## Process layer 18 ## Process layer 18 ## Process layer 18 ## Process layer 18 ## Process layer 18 ## Process layer 18 ## Process layer 18 ## Process layer 18 ## Process layer 18 ## Process layer 19 ## Process layer 19 ## Process layer 19 ## Process layer 19 ## Process layer 19 ## Process layer 19 ## Process layer 19 ## Process layer 19 ## Process layer 19 ## Process layer 19 ## Process layer 20 ## Process layer 20 ## Process layer 20 ## Process layer 20 ## Process layer 20 ## Process layer 20 ## Process layer 20 ## Process layer 20 ## Process layer 20 ## Process layer 20 ## Process layer 21 ## Process layer 21 ## Process layer 21 ## Process layer 21 ## Process layer 21 ## Process layer 21 ## Process layer 21 ## Process layer 21 ## Process layer 21 ## Process layer 21 ## Process layer 22 ## Process layer 22 ## Process layer 22 ## Process layer 22 ## Process layer 22 ## Process layer 22 ## Process layer 22 ## Process layer 22 ## Process layer 22 ## Process layer 22 ## Experiment SowingDate Clock.Today DAS Depth SW DUL relativeSW ## 1: AshleyDene SD5 2011-08-11 189 1 0.246 0.283 0.869258 ## name mean lower upper Rhat n.eff ## 1: cp_1 188.281090479 126.836049574 260.346787519 1.049034 89 ## 2: cp_2 333.698396993 293.300671538 379.520721921 1.014872 181 ## 3: DAS_2 -0.003607226 -0.007273308 -0.001408076 1.003657 329 ## 4: int_1 0.901665788 0.822107620 0.981967590 1.002554 1471 ## 5: sigma_1 0.126259617 0.092427709 0.165269339 1.000464 2064 4.6 WHAT IS MY ESTIMATED DULs? ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Warning in `[.data.table`(x$nearDAS, , `:=`(esti_DUL, cp1_int1)): ## Invalid .internal.selfref detected and fixed by taking a (shallow) copy of the ## data.table so that := can add this new column by reference. At an earlier point, ## this data.table has been copied by R (or was created manually using structure() ## or similar). Avoid names&lt;- and attr&lt;- which in R currently (and oddly) may ## copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ? ## setnames and ?setattr. If this message doesn&#39;t help, please report your use case ## to the data.table issue tracker so the root cause can be fixed or this message ## improved. ## Experiment SowingDate Clock.Today DAS Depth SW DUL relativeSW ## 1: AshleyDene SD1 2011-07-28 280 1 0.265 0.270 0.9814815 ## 2: AshleyDene SD2 2011-08-11 275 1 0.230 0.275 0.8363636 ## 3: AshleyDene SD3 2011-07-28 232 1 0.278 0.278 1.0000000 ## 4: AshleyDene SD4 2011-08-11 210 1 0.257 0.300 0.8566667 ## 5: AshleyDene SD5 2011-08-11 189 1 0.246 0.283 0.8692580 ## --- ## 216: AshleyDene SD6 2012-01-05 87 22 0.107 0.114 0.9385965 ## 217: AshleyDene SD7 2012-01-05 59 22 0.110 0.113 0.9734513 ## 218: AshleyDene SD8 2012-02-01 54 22 0.123 0.125 0.9840000 ## 219: AshleyDene SD9 2012-02-15 36 22 0.104 0.119 0.8739496 ## 220: AshleyDene SD10 2012-02-28 495 22 0.114 0.123 0.9268293 ## esti_DUL posterior_DUL ## 1: 0.8675252 0.2342318 ## 2: 0.8596909 0.2364150 ## 3: 0.8891299 0.2471781 ## 4: 0.8966361 0.2689908 ## 5: 0.9016658 0.2551714 ## --- ## 216: 0.9566515 0.1090583 ## 217: 0.9663465 0.1091972 ## 218: 0.9635741 0.1204468 ## 219: 0.8675181 0.1032347 ## 220: 0.9422084 0.1158916 4.7 How much different it made? ## `geom_smooth()` using method = &#39;loess&#39; and formula &#39;y ~ x&#39; ## `geom_smooth()` using method = &#39;loess&#39; and formula &#39;y ~ x&#39; ## `geom_smooth()` using method = &#39;loess&#39; and formula &#39;y ~ x&#39; 4.8 OUTPUT ALL THE GRAPHS 4.9 The final version workflow for DUL, LL and SW via average max and min. DUL AND LL CAN BE SOWINGDATES DEPEND - apsim is a point model. ## Empty data.table (0 rows and 9 cols): Experiment,SowingDate,Depth,Clock.Today,Season,DAS... ## Empty data.table (0 rows and 9 cols): Experiment,SowingDate,Depth,Clock.Today,Season,DAS... Table 4.1: Initial soil parameters for 22 layers in 10 different sowing dates. Experiment SowingDate Depth Clock.Today Season DAS PAWC DUL LL AshleyDene SD1 1 2010-10-21 2010/11 0 26.000000 54.050000 12.650000 AshleyDene SD1 2 2010-10-21 2010/11 0 12.000000 19.350000 8.000000 AshleyDene SD1 3 2010-10-21 2010/11 0 10.000000 15.775000 7.450000 AshleyDene SD1 4 2010-10-21 2010/11 0 9.000000 13.525000 7.550000 AshleyDene SD1 5 2010-10-21 2010/11 0 10.237500 11.826762 6.875000 AshleyDene SD1 6 2010-10-21 2010/11 0 9.837500 11.425000 6.975000 AshleyDene SD1 7 2010-10-21 2010/11 0 9.987500 11.132101 7.025000 AshleyDene SD1 8 2010-10-21 2010/11 0 10.300000 11.525000 7.025000 AshleyDene SD1 9 2010-10-21 2010/11 0 10.125000 11.475000 6.875000 AshleyDene SD1 10 2010-10-21 2010/11 0 9.675000 11.025000 7.033357 AshleyDene SD1 11 2010-10-21 2010/11 0 9.566667 10.566667 7.325000 AshleyDene SD1 12 2010-10-21 2010/11 0 9.983333 11.633333 7.913195 AshleyDene SD1 13 2010-10-21 2010/11 0 10.633333 11.400000 8.375000 AshleyDene SD1 14 2010-10-21 2010/11 0 10.612500 13.012500 8.575000 AshleyDene SD1 15 2010-10-21 2010/11 0 11.437500 13.762500 9.235153 AshleyDene SD1 16 2010-10-21 2010/11 0 11.700000 13.425000 9.599993 AshleyDene SD1 17 2010-10-21 2010/11 0 11.150000 12.575000 9.400000 AshleyDene SD1 18 2010-10-21 2010/11 0 10.937500 12.762500 9.500724 AshleyDene SD1 19 2010-10-21 2010/11 0 10.987500 12.187500 9.489857 AshleyDene SD1 20 2010-10-21 2010/11 0 11.012500 11.637500 9.456728 AshleyDene SD1 21 2010-10-21 2010/11 0 11.362500 12.762500 9.750000 AshleyDene SD1 22 2010-10-21 2010/11 0 11.781250 14.706250 9.987500 AshleyDene SD2 1 2010-11-09 2010/11 0 41.100000 55.050000 15.300000 AshleyDene SD2 2 2010-11-09 2010/11 0 18.875000 22.075000 9.550000 AshleyDene SD2 3 2010-11-09 2010/11 0 14.262500 16.775000 8.400000 AshleyDene SD2 4 2010-11-09 2010/11 0 11.437500 13.525000 7.300000 AshleyDene SD2 5 2010-11-09 2010/11 0 10.300000 12.125000 7.350000 AshleyDene SD2 6 2010-11-09 2010/11 0 10.100000 11.850000 7.175000 AshleyDene SD2 7 2010-11-09 2010/11 0 9.575000 11.175000 6.775000 AshleyDene SD2 8 2010-11-09 2010/11 0 9.291667 10.825000 6.450000 AshleyDene SD2 9 2010-11-09 2010/11 0 9.512500 10.250000 6.375000 AshleyDene SD2 10 2010-11-09 2010/11 0 8.733333 10.075000 6.375000 AshleyDene SD2 11 2010-11-09 2010/11 0 9.037500 10.100000 6.425000 AshleyDene SD2 12 2010-11-09 2010/11 0 9.512500 11.100000 6.375000 AshleyDene SD2 13 2010-11-09 2010/11 0 10.204167 11.950000 6.825000 AshleyDene SD2 14 2010-11-09 2010/11 0 10.287500 12.275000 6.425000 AshleyDene SD2 15 2010-11-09 2010/11 0 9.766667 11.450000 6.950000 AshleyDene SD2 16 2010-11-09 2010/11 0 9.541667 10.900000 7.014732 AshleyDene SD2 17 2010-11-09 2010/11 0 9.420833 10.800000 7.322416 AshleyDene SD2 18 2010-11-09 2010/11 0 10.212500 11.250000 7.618431 AshleyDene SD2 19 2010-11-09 2010/11 0 10.679167 11.475000 7.902471 AshleyDene SD2 20 2010-11-09 2010/11 0 10.704167 11.400000 8.171994 AshleyDene SD2 21 2010-11-09 2010/11 0 10.949306 11.825000 8.675000 AshleyDene SD2 22 2010-11-09 2010/11 0 11.405035 12.000000 10.200000 AshleyDene SD3 1 2010-12-08 2010/11 5 26.650000 55.600000 14.750000 AshleyDene SD3 2 2010-12-08 2010/11 5 13.883333 21.225000 8.575000 AshleyDene SD3 3 2010-12-08 2010/11 5 11.600000 16.575000 8.075000 AshleyDene SD3 4 2010-12-08 2010/11 5 10.933333 14.275000 7.925000 AshleyDene SD3 5 2010-12-08 2010/11 5 9.883333 13.300000 7.425000 AshleyDene SD3 6 2010-12-08 2010/11 5 9.375000 11.906675 7.050000 AshleyDene SD3 7 2010-12-08 2010/11 5 10.483333 12.725000 7.200000 AshleyDene SD3 8 2010-12-08 2010/11 5 9.616667 11.750000 6.875000 AshleyDene SD3 9 2010-12-08 2010/11 5 8.841667 10.725000 6.375000 AshleyDene SD3 10 2010-12-08 2010/11 5 8.825000 10.450000 6.275000 AshleyDene SD3 11 2010-12-08 2010/11 5 8.475000 10.525000 6.525000 AshleyDene SD3 12 2010-12-08 2010/11 5 9.108333 10.875000 6.675000 AshleyDene SD3 13 2010-12-08 2010/11 5 9.641667 11.525000 6.875000 AshleyDene SD3 14 2010-12-08 2010/11 5 10.050000 11.750000 7.219970 AshleyDene SD3 15 2010-12-08 2010/11 5 10.208333 11.725000 7.450000 AshleyDene SD3 16 2010-12-08 2010/11 5 9.841667 11.450000 7.618338 AshleyDene SD3 17 2010-12-08 2010/11 5 10.108333 11.441667 8.125000 AshleyDene SD3 18 2010-12-08 2010/11 5 10.158333 11.297222 8.777693 AshleyDene SD3 19 2010-12-08 2010/11 5 10.705556 12.026852 9.386197 AshleyDene SD3 20 2010-12-08 2010/11 5 11.146296 12.276543 10.015351 AshleyDene SD3 21 2010-12-08 2010/11 5 11.136034 12.521039 9.870289 AshleyDene SD3 22 2010-12-08 2010/11 5 12.069631 12.278361 9.482202 AshleyDene SD4 1 2011-01-13 2010/11 12 38.700000 60.000000 13.950000 AshleyDene SD4 2 2011-01-13 2010/11 12 17.950000 24.275000 8.350000 AshleyDene SD4 3 2011-01-13 2010/11 12 13.450000 18.125000 7.500000 AshleyDene SD4 4 2011-01-13 2010/11 12 11.150000 15.125000 6.975000 AshleyDene SD4 5 2011-01-13 2010/11 12 9.850000 12.925000 6.750000 AshleyDene SD4 6 2011-01-13 2010/11 12 9.100000 11.950000 6.700000 AshleyDene SD4 7 2011-01-13 2010/11 12 9.050000 11.400000 6.750000 AshleyDene SD4 8 2011-01-13 2010/11 12 9.400000 11.375000 6.825000 AshleyDene SD4 9 2011-01-13 2010/11 12 8.950000 11.075000 6.800000 AshleyDene SD4 10 2011-01-13 2010/11 12 9.100000 11.025000 7.050000 AshleyDene SD4 11 2011-01-13 2010/11 12 8.950000 10.950000 7.528332 AshleyDene SD4 12 2011-01-13 2010/11 12 9.991667 11.633333 7.965535 AshleyDene SD4 13 2011-01-13 2010/11 12 10.170833 12.091667 8.346451 AshleyDene SD4 14 2011-01-13 2010/11 12 10.512500 11.662500 8.635768 AshleyDene SD4 15 2011-01-13 2010/11 12 10.587500 11.579167 9.343643 AshleyDene SD4 16 2011-01-13 2010/11 12 10.862500 11.995833 10.070267 AshleyDene SD4 17 2011-01-13 2010/11 12 11.241667 12.225000 10.595106 AshleyDene SD4 18 2011-01-13 2010/11 12 11.809722 12.325000 11.021937 AshleyDene SD4 19 2011-01-13 2010/11 12 11.787500 12.200000 10.790480 AshleyDene SD4 20 2011-01-13 2010/11 12 11.300000 11.666760 10.500000 AshleyDene SD4 21 2011-01-13 2010/11 12 11.475000 11.740636 10.679802 AshleyDene SD4 22 2011-01-13 2010/11 12 11.575000 11.820956 10.550000 AshleyDene SD5 1 2011-02-03 2010/11 14 33.400000 56.600000 13.300000 AshleyDene SD5 2 2011-02-03 2010/11 14 14.950000 20.625000 7.725000 AshleyDene SD5 3 2011-02-03 2010/11 14 11.775000 16.200000 7.725000 AshleyDene SD5 4 2011-02-03 2010/11 14 10.625000 14.425000 7.150000 AshleyDene SD5 5 2011-02-03 2010/11 14 9.900000 12.550000 7.025000 AshleyDene SD5 6 2011-02-03 2010/11 14 8.850000 11.425000 6.950000 AshleyDene SD5 7 2011-02-03 2010/11 14 8.675000 11.000000 6.475000 AshleyDene SD5 8 2011-02-03 2010/11 14 8.700000 10.575000 6.300000 AshleyDene SD5 9 2011-02-03 2010/11 14 8.725000 10.775000 6.375000 AshleyDene SD5 10 2011-02-03 2010/11 14 8.725000 10.450000 6.800000 AshleyDene SD5 11 2011-02-03 2010/11 14 9.075000 11.075000 7.046825 AshleyDene SD5 12 2011-02-03 2010/11 14 8.875000 10.825000 7.275069 AshleyDene SD5 13 2011-02-03 2010/11 14 9.300000 11.012500 7.708830 AshleyDene SD5 14 2011-02-03 2010/11 14 9.545833 11.383333 8.151305 AshleyDene SD5 15 2011-02-03 2010/11 14 9.960417 11.919792 8.487310 AshleyDene SD5 16 2011-02-03 2010/11 14 10.095833 11.658333 8.846311 AshleyDene SD5 17 2011-02-03 2010/11 14 10.139583 11.633333 8.940205 AshleyDene SD5 18 2011-02-03 2010/11 14 10.086458 11.533333 9.032711 AshleyDene SD5 19 2011-02-03 2010/11 14 10.175000 10.933333 8.688053 AshleyDene SD5 20 2011-02-03 2010/11 14 9.633333 10.952778 8.653590 AshleyDene SD5 21 2011-02-03 2010/11 14 9.866667 10.717593 8.906112 AshleyDene SD5 22 2011-02-03 2010/11 14 9.975000 11.065124 9.108838 AshleyDene SD6 1 2011-10-10 2011/12 5 36.900000 51.850000 14.900000 AshleyDene SD6 2 2011-10-10 2011/12 5 15.975000 17.240511 8.575000 AshleyDene SD6 3 2011-10-10 2011/12 5 12.062500 13.269187 7.825000 AshleyDene SD6 4 2011-10-10 2011/12 5 10.225000 10.807435 7.325000 AshleyDene SD6 5 2011-10-10 2011/12 5 9.312500 10.239878 7.225000 AshleyDene SD6 6 2011-10-10 2011/12 5 8.912500 10.309200 7.344761 AshleyDene SD6 7 2011-10-10 2011/12 5 9.062500 10.216180 7.350000 AshleyDene SD6 8 2011-10-10 2011/12 5 9.325000 9.938648 7.740818 AshleyDene SD6 9 2011-10-10 2011/12 5 9.800000 9.950000 7.641677 AshleyDene SD6 10 2011-10-10 2011/12 5 9.362500 9.400000 7.447340 AshleyDene SD6 11 2011-10-10 2011/12 5 9.050000 9.300000 7.358344 AshleyDene SD6 12 2011-10-10 2011/12 5 8.912500 8.950000 7.276003 AshleyDene SD6 13 2011-10-10 2011/12 5 8.862500 8.925000 7.570705 AshleyDene SD6 14 2011-10-10 2011/12 5 8.937500 8.975000 7.869109 AshleyDene SD6 15 2011-10-10 2011/12 5 9.650000 9.775000 8.492577 AshleyDene SD6 16 2011-10-10 2011/12 5 9.850000 9.875000 9.125000 AshleyDene SD6 17 2011-10-10 2011/12 5 10.462500 10.600000 9.307408 AshleyDene SD6 18 2011-10-10 2011/12 5 10.212500 10.350000 9.485385 AshleyDene SD6 19 2011-10-10 2011/12 5 10.162500 10.250000 9.632558 AshleyDene SD6 20 2011-10-10 2011/12 5 9.937500 10.225000 9.676883 AshleyDene SD6 21 2011-10-10 2011/12 5 10.425000 10.775538 9.775000 AshleyDene SD6 22 2011-10-10 2011/12 5 10.925000 11.400220 10.625000 AshleyDene SD7 1 2011-11-07 2011/12 1 38.650000 55.150000 18.100000 AshleyDene SD7 2 2011-11-07 2011/12 1 20.766667 20.950000 10.775000 AshleyDene SD7 3 2011-11-07 2011/12 1 14.816667 15.900000 9.050000 AshleyDene SD7 4 2011-11-07 2011/12 1 12.900000 13.450000 8.650000 AshleyDene SD7 5 2011-11-07 2011/12 1 11.533333 12.100000 8.300000 AshleyDene SD7 6 2011-11-07 2011/12 1 10.858333 11.800000 8.135994 AshleyDene SD7 7 2011-11-07 2011/12 1 10.058333 10.850000 7.925000 AshleyDene SD7 8 2011-11-07 2011/12 1 9.541667 9.925000 7.703568 AshleyDene SD7 9 2011-11-07 2011/12 1 9.616667 10.050000 7.601463 AshleyDene SD7 10 2011-11-07 2011/12 1 9.683333 10.100000 7.736664 AshleyDene SD7 11 2011-11-07 2011/12 1 9.500000 10.225000 7.661311 AshleyDene SD7 12 2011-11-07 2011/12 1 9.008333 9.700000 7.525000 AshleyDene SD7 13 2011-11-07 2011/12 1 8.683333 9.425000 7.934329 AshleyDene SD7 14 2011-11-07 2011/12 1 9.183333 9.775000 8.317523 AshleyDene SD7 15 2011-11-07 2011/12 1 9.800000 10.250000 8.708588 AshleyDene SD7 16 2011-11-07 2011/12 1 9.883333 10.800000 9.044146 AshleyDene SD7 17 2011-11-07 2011/12 1 10.241667 10.600000 9.454508 AshleyDene SD7 18 2011-11-07 2011/12 1 10.583333 10.825000 9.872468 AshleyDene SD7 19 2011-11-07 2011/12 1 10.700000 11.125000 9.966947 AshleyDene SD7 20 2011-11-07 2011/12 1 10.233333 10.650000 9.925000 AshleyDene SD7 21 2011-11-07 2011/12 1 10.888889 11.366667 10.400171 AshleyDene SD7 22 2011-11-07 2011/12 1 10.888889 11.333333 10.433333 AshleyDene SD8 1 2011-12-09 2011/12 3 38.000000 50.600000 19.050000 AshleyDene SD8 2 2011-12-09 2011/12 3 10.941667 16.810513 9.107421 AshleyDene SD8 3 2011-12-09 2011/12 3 9.758333 13.997516 8.586996 AshleyDene SD8 4 2011-12-09 2011/12 3 9.358333 11.797918 7.996343 AshleyDene SD8 5 2011-12-09 2011/12 3 8.800000 10.799207 7.676463 AshleyDene SD8 6 2011-12-09 2011/12 3 9.041667 10.533087 7.576744 AshleyDene SD8 7 2011-12-09 2011/12 3 9.083333 10.145895 7.318736 AshleyDene SD8 8 2011-12-09 2011/12 3 8.900000 9.699922 7.423540 AshleyDene SD8 9 2011-12-09 2011/12 3 9.225000 9.672192 7.863226 AshleyDene SD8 10 2011-12-09 2011/12 3 9.408333 9.625000 8.041938 AshleyDene SD8 11 2011-12-09 2011/12 3 9.366667 9.550000 8.385060 AshleyDene SD8 12 2011-12-09 2011/12 3 9.466667 9.575000 8.484863 AshleyDene SD8 13 2011-12-09 2011/12 3 9.775000 10.252370 8.938097 AshleyDene SD8 14 2011-12-09 2011/12 3 10.191667 10.967859 9.291635 AshleyDene SD8 15 2011-12-09 2011/12 3 10.266667 10.908243 9.425078 AshleyDene SD8 16 2011-12-09 2011/12 3 10.466667 10.854102 9.771765 AshleyDene SD8 17 2011-12-09 2011/12 3 10.583333 10.800565 9.690124 AshleyDene SD8 18 2011-12-09 2011/12 3 10.416667 10.798669 9.755354 AshleyDene SD8 19 2011-12-09 2011/12 3 10.883333 11.494893 10.126983 AshleyDene SD8 20 2011-12-09 2011/12 3 11.900000 12.255454 10.959465 AshleyDene SD8 21 2011-12-09 2011/12 3 12.033333 13.010926 11.314133 AshleyDene SD8 22 2011-12-09 2011/12 3 12.091667 12.457871 11.487540 AshleyDene SD9 1 2012-01-10 2011/12 0 33.400000 54.050000 22.050000 AshleyDene SD9 2 2012-01-10 2011/12 0 19.950000 23.477788 13.252214 AshleyDene SD9 3 2012-01-10 2011/12 0 14.358333 16.949080 10.226306 AshleyDene SD9 4 2012-01-10 2011/12 0 11.225000 12.880900 8.885845 AshleyDene SD9 5 2012-01-10 2011/12 0 9.725000 11.594212 8.427621 AshleyDene SD9 6 2012-01-10 2011/12 0 9.091667 10.598742 8.508460 AshleyDene SD9 7 2012-01-10 2011/12 0 9.141667 10.121170 8.793375 AshleyDene SD9 8 2012-01-10 2011/12 0 9.325000 9.975646 9.084760 AshleyDene SD9 9 2012-01-10 2011/12 0 9.466667 9.785926 9.213879 AshleyDene SD9 10 2012-01-10 2011/12 0 9.266667 10.062922 9.225000 AshleyDene SD9 11 2012-01-10 2011/12 0 9.500000 10.141908 9.281808 AshleyDene SD9 12 2012-01-10 2011/12 0 9.425000 9.753107 9.179805 AshleyDene SD9 13 2012-01-10 2011/12 0 9.433333 10.373481 9.350000 AshleyDene SD9 14 2012-01-10 2011/12 0 9.941667 11.149838 9.850000 AshleyDene SD9 15 2012-01-10 2011/12 0 10.500000 11.730944 10.450000 AshleyDene SD9 16 2012-01-10 2011/12 0 10.583333 12.138102 10.425000 AshleyDene SD9 17 2012-01-10 2011/12 0 10.516667 11.287662 10.250000 AshleyDene SD9 18 2012-01-10 2011/12 0 9.950000 10.600962 9.875000 AshleyDene SD9 19 2012-01-10 2011/12 0 9.625000 10.368783 9.550000 AshleyDene SD9 20 2012-01-10 2011/12 0 9.450000 10.170477 9.275000 AshleyDene SD9 21 2012-01-10 2011/12 0 9.925000 10.986436 9.875000 AshleyDene SD9 22 2012-01-10 2011/12 0 10.300000 11.850229 10.166667 AshleyDene SD10 1 2012-02-17 2011/12 484 37.500000 56.850000 35.000000 AshleyDene SD10 2 2012-02-17 2011/12 484 19.675000 23.882791 16.742475 AshleyDene SD10 3 2012-02-17 2011/12 484 15.425000 18.199897 13.127232 AshleyDene SD10 4 2012-02-17 2011/12 484 11.325000 13.430111 10.264089 AshleyDene SD10 5 2012-02-17 2011/12 484 9.025000 11.666624 9.025000 AshleyDene SD10 6 2012-02-17 2011/12 484 8.237500 11.132802 8.237500 AshleyDene SD10 7 2012-02-17 2011/12 484 7.900000 10.620664 7.900000 AshleyDene SD10 8 2012-02-17 2011/12 484 7.525000 10.749816 7.525000 AshleyDene SD10 9 2012-02-17 2011/12 484 8.275000 11.659579 8.275000 AshleyDene SD10 10 2012-02-17 2011/12 484 10.087500 11.810948 10.087500 AshleyDene SD10 11 2012-02-17 2011/12 484 9.887500 11.580961 9.887500 AshleyDene SD10 12 2012-02-17 2011/12 484 8.812500 11.180058 8.812500 AshleyDene SD10 13 2012-02-17 2011/12 484 8.262500 10.717431 8.262500 AshleyDene SD10 14 2012-02-17 2011/12 484 8.500000 10.272979 8.500000 AshleyDene SD10 15 2012-02-17 2011/12 484 8.981250 10.765964 8.981250 AshleyDene SD10 16 2012-02-17 2011/12 484 9.325000 11.275068 9.325000 AshleyDene SD10 17 2012-02-17 2011/12 484 9.450000 11.135722 9.450000 AshleyDene SD10 18 2012-02-17 2011/12 484 9.762500 11.040135 9.762500 AshleyDene SD10 19 2012-02-17 2011/12 484 10.018750 11.276559 10.018750 AshleyDene SD10 20 2012-02-17 2011/12 484 10.275000 11.517049 10.275000 AshleyDene SD10 21 2012-02-17 2011/12 484 10.881250 11.919984 10.881250 AshleyDene SD10 22 2012-02-17 2011/12 484 11.262500 12.253568 11.262500 Iversen12 SD1 1 2010-10-04 2010/11 0 48.875000 72.150000 18.500000 Iversen12 SD1 2 2010-10-04 2010/11 0 29.900000 35.750000 13.850000 Iversen12 SD1 3 2010-10-04 2010/11 0 27.387500 30.475000 12.825000 Iversen12 SD1 4 2010-10-04 2010/11 0 26.250000 28.800000 10.850000 Iversen12 SD1 5 2010-10-04 2010/11 0 27.012500 28.950000 9.225000 Iversen12 SD1 6 2010-10-04 2010/11 0 29.237500 30.000000 9.025000 Iversen12 SD1 7 2010-10-04 2010/11 0 30.612500 30.612500 9.350000 Iversen12 SD1 8 2010-10-04 2010/11 0 31.387500 32.325000 11.325000 Iversen12 SD1 9 2010-10-04 2010/11 0 29.737500 32.925000 13.950000 Iversen12 SD1 10 2010-10-04 2010/11 0 31.600000 32.250000 12.576080 Iversen12 SD1 11 2010-10-04 2010/11 0 30.862500 31.000000 10.972380 Iversen12 SD1 12 2010-10-04 2010/11 0 28.825000 29.275000 9.358116 Iversen12 SD1 13 2010-10-04 2010/11 0 30.262500 30.875000 10.211572 Iversen12 SD1 14 2010-10-04 2010/11 0 33.875000 34.075000 11.036462 Iversen12 SD1 15 2010-10-04 2010/11 0 34.312500 34.550000 16.207260 Iversen12 SD1 16 2010-10-04 2010/11 0 35.150000 35.325000 21.276482 Iversen12 SD1 17 2010-10-04 2010/11 0 36.450000 36.975000 22.606911 Iversen12 SD1 18 2010-10-04 2010/11 0 36.637500 37.900000 24.876187 Iversen12 SD1 19 2010-10-04 2010/11 0 36.337500 36.925000 25.874505 Iversen12 SD1 20 2010-10-04 2010/11 0 36.650000 36.975000 26.865865 Iversen12 SD1 21 2010-10-04 2010/11 0 35.825000 36.825000 27.475890 Iversen12 SD1 22 2010-10-04 2010/11 0 36.237500 36.825000 28.083294 Iversen12 SD2 1 2010-11-04 2010/11 3 75.100000 75.100000 18.400000 Iversen12 SD2 2 2010-11-04 2010/11 3 18.900000 36.625000 14.300000 Iversen12 SD2 3 2010-11-04 2010/11 3 20.525000 31.750000 15.475000 Iversen12 SD2 4 2010-11-04 2010/11 3 20.600000 29.250000 14.225000 Iversen12 SD2 5 2010-11-04 2010/11 3 20.325000 29.475000 12.725000 Iversen12 SD2 6 2010-11-04 2010/11 3 24.125000 30.300000 13.325000 Iversen12 SD2 7 2010-11-04 2010/11 3 27.687500 31.500000 14.400000 Iversen12 SD2 8 2010-11-04 2010/11 3 30.150000 32.675000 13.292846 Iversen12 SD2 9 2010-11-04 2010/11 3 32.300000 33.700000 13.544858 Iversen12 SD2 10 2010-11-04 2010/11 3 32.650000 33.600000 14.517048 Iversen12 SD2 11 2010-11-04 2010/11 3 31.775000 31.875000 13.449907 Iversen12 SD2 12 2010-11-04 2010/11 3 30.675000 30.950000 12.361145 Iversen12 SD2 13 2010-11-04 2010/11 3 33.325000 33.950000 12.729379 Iversen12 SD2 14 2010-11-04 2010/11 3 33.900000 34.100000 13.072090 Iversen12 SD2 15 2010-11-04 2010/11 3 34.537500 34.650000 17.553455 Iversen12 SD2 16 2010-11-04 2010/11 3 35.337500 35.975000 21.955841 Iversen12 SD2 17 2010-11-04 2010/11 3 36.137500 37.000000 23.791142 Iversen12 SD2 18 2010-11-04 2010/11 3 36.950000 37.525000 25.595066 Iversen12 SD2 19 2010-11-04 2010/11 3 37.212500 37.400000 27.103980 Iversen12 SD2 20 2010-11-04 2010/11 3 35.525000 36.350000 28.593348 Iversen12 SD2 21 2010-11-04 2010/11 3 36.450000 36.825000 28.782364 Iversen12 SD2 22 2010-11-04 2010/11 3 35.487500 36.750000 28.970676 Iversen12 SD3 1 2010-12-02 2010/11 21 46.600000 73.500000 21.400000 Iversen12 SD3 2 2010-12-02 2010/11 21 28.800000 36.750000 15.775000 Iversen12 SD3 3 2010-12-02 2010/11 21 26.775000 32.725000 16.600000 Iversen12 SD3 4 2010-12-02 2010/11 21 25.550000 30.475000 17.000000 Iversen12 SD3 5 2010-12-02 2010/11 21 26.900000 31.075000 17.325000 Iversen12 SD3 6 2010-12-02 2010/11 21 29.050000 32.375000 16.818445 Iversen12 SD3 7 2010-12-02 2010/11 21 30.500000 33.525000 15.870527 Iversen12 SD3 8 2010-12-02 2010/11 21 31.775000 33.750000 14.123326 Iversen12 SD3 9 2010-12-02 2010/11 21 29.850000 31.875000 12.198607 Iversen12 SD3 10 2010-12-02 2010/11 21 28.475000 30.250000 10.976587 Iversen12 SD3 11 2010-12-02 2010/11 21 27.450000 27.675000 9.986083 Iversen12 SD3 12 2010-12-02 2010/11 21 27.125000 27.125000 8.987573 Iversen12 SD3 13 2010-12-02 2010/11 21 28.750000 28.900000 13.244360 Iversen12 SD3 14 2010-12-02 2010/11 21 31.475000 32.075000 17.429766 Iversen12 SD3 15 2010-12-02 2010/11 21 34.050000 34.050000 15.946968 Iversen12 SD3 16 2010-12-02 2010/11 21 34.550000 34.850000 14.435938 Iversen12 SD3 17 2010-12-02 2010/11 21 36.750000 37.300000 19.157255 Iversen12 SD3 18 2010-12-02 2010/11 21 36.175000 37.575000 23.788862 Iversen12 SD3 19 2010-12-02 2010/11 21 36.550000 38.000000 26.074027 Iversen12 SD3 20 2010-12-02 2010/11 21 36.775000 37.725000 28.319725 Iversen12 SD3 21 2010-12-02 2010/11 21 34.075000 35.225000 28.249075 Iversen12 SD3 22 2010-12-02 2010/11 21 33.750000 35.000000 28.175585 Iversen12 SD4 1 2011-01-10 2010/11 15 52.150000 74.100000 31.650000 Iversen12 SD4 2 2011-01-10 2010/11 15 28.825000 36.750000 16.900000 Iversen12 SD4 3 2011-01-10 2010/11 15 24.700000 31.425000 14.950000 Iversen12 SD4 4 2011-01-10 2010/11 15 23.225000 29.425000 12.750000 Iversen12 SD4 5 2011-01-10 2010/11 15 23.075000 29.700000 11.950000 Iversen12 SD4 6 2011-01-10 2010/11 15 23.225000 31.775000 10.925000 Iversen12 SD4 7 2011-01-10 2010/11 15 24.925000 32.175000 10.575000 Iversen12 SD4 8 2011-01-10 2010/11 15 27.525000 31.975000 11.988949 Iversen12 SD4 9 2011-01-10 2010/11 15 27.200000 29.975000 10.371638 Iversen12 SD4 10 2011-01-10 2010/11 15 24.175000 27.525000 7.894958 Iversen12 SD4 11 2011-01-10 2010/11 15 22.700000 26.350000 8.625000 Iversen12 SD4 12 2011-01-10 2010/11 15 25.175000 27.400000 9.941262 Iversen12 SD4 13 2011-01-10 2010/11 15 29.475000 29.475000 12.100084 Iversen12 SD4 14 2011-01-10 2010/11 15 30.675000 30.675000 14.229431 Iversen12 SD4 15 2011-01-10 2010/11 15 32.425000 32.425000 16.704684 Iversen12 SD4 16 2011-01-10 2010/11 15 33.975000 34.125000 19.139078 Iversen12 SD4 17 2011-01-10 2010/11 15 33.100000 33.750000 19.956189 Iversen12 SD4 18 2011-01-10 2010/11 15 34.825000 34.825000 22.499177 Iversen12 SD4 19 2011-01-10 2010/11 15 36.850000 36.850000 25.809530 Iversen12 SD4 20 2011-01-10 2010/11 15 37.325000 38.450000 29.064026 Iversen12 SD4 21 2011-01-10 2010/11 15 37.175000 38.125000 28.853390 Iversen12 SD4 22 2011-01-10 2010/11 15 34.800000 35.725000 28.640563 Iversen12 SD5 1 2011-02-07 2010/11 10 39.400000 73.850000 30.900000 Iversen12 SD5 2 2011-02-07 2010/11 10 27.225000 36.975000 17.200000 Iversen12 SD5 3 2011-02-07 2010/11 10 25.550000 32.650000 17.625000 Iversen12 SD5 4 2011-02-07 2010/11 10 23.850000 30.900000 15.975000 Iversen12 SD5 5 2011-02-07 2010/11 10 22.600000 30.700000 12.950000 Iversen12 SD5 6 2011-02-07 2010/11 10 22.500000 31.150000 12.500000 Iversen12 SD5 7 2011-02-07 2010/11 10 24.450000 30.750000 11.444229 Iversen12 SD5 8 2011-02-07 2010/11 10 24.000000 31.225000 8.990477 Iversen12 SD5 9 2011-02-07 2010/11 10 22.525000 31.450000 9.100000 Iversen12 SD5 10 2011-02-07 2010/11 10 25.200000 31.800000 12.550000 Iversen12 SD5 11 2011-02-07 2010/11 10 26.600000 31.200000 11.525596 Iversen12 SD5 12 2011-02-07 2010/11 10 27.075000 31.725000 10.250960 Iversen12 SD5 13 2011-02-07 2010/11 10 24.975000 30.275000 13.834486 Iversen12 SD5 14 2011-02-07 2010/11 10 28.475000 30.800000 17.358356 Iversen12 SD5 15 2011-02-07 2010/11 10 32.000000 32.900000 18.061877 Iversen12 SD5 16 2011-02-07 2010/11 10 33.700000 34.650000 18.742296 Iversen12 SD5 17 2011-02-07 2010/11 10 33.250000 33.375000 18.037571 Iversen12 SD5 18 2011-02-07 2010/11 10 34.050000 34.050000 20.033145 Iversen12 SD5 19 2011-02-07 2010/11 10 36.100000 36.125000 22.710649 Iversen12 SD5 20 2011-02-07 2010/11 10 36.025000 36.675000 25.276162 Iversen12 SD5 21 2011-02-07 2010/11 10 35.450000 35.625000 26.791656 Iversen12 SD5 22 2011-02-07 2010/11 10 34.100000 34.650000 28.263403 Iversen12 SD6 1 2011-10-10 2011/12 4 51.350000 74.100000 23.150000 Iversen12 SD6 2 2011-10-10 2011/12 4 32.987500 33.275000 16.133333 Iversen12 SD6 3 2011-10-10 2011/12 4 30.500000 30.925000 16.766667 Iversen12 SD6 4 2011-10-10 2011/12 4 28.375000 28.550000 18.500000 Iversen12 SD6 5 2011-10-10 2011/12 4 27.737500 28.000000 17.400000 Iversen12 SD6 6 2011-10-10 2011/12 4 28.287500 28.300000 15.066667 Iversen12 SD6 7 2011-10-10 2011/12 4 29.462500 29.500000 15.200000 Iversen12 SD6 8 2011-10-10 2011/12 4 30.912500 31.175000 17.620515 Iversen12 SD6 9 2011-10-10 2011/12 4 31.287500 31.650000 17.646753 Iversen12 SD6 10 2011-10-10 2011/12 4 31.475000 31.500000 17.133373 Iversen12 SD6 11 2011-10-10 2011/12 4 31.937500 32.025000 20.441345 Iversen12 SD6 12 2011-10-10 2011/12 4 32.187500 32.575000 23.675665 Iversen12 SD6 13 2011-10-10 2011/12 4 33.625000 33.675000 22.621572 Iversen12 SD6 14 2011-10-10 2011/12 4 33.900000 34.325000 21.560057 Iversen12 SD6 15 2011-10-10 2011/12 4 34.187500 34.400000 23.740552 Iversen12 SD6 16 2011-10-10 2011/12 4 33.625000 34.425000 25.882974 Iversen12 SD6 17 2011-10-10 2011/12 4 35.500000 35.925000 26.167106 Iversen12 SD6 18 2011-10-10 2011/12 4 35.387500 36.666667 26.406734 Iversen12 SD6 19 2011-10-10 2011/12 4 37.012500 37.966667 28.976608 Iversen12 SD6 20 2011-10-10 2011/12 4 37.200000 37.850000 31.503668 Iversen12 SD6 21 2011-10-10 2011/12 4 36.575000 37.300000 31.289432 Iversen12 SD6 22 2011-10-10 2011/12 4 35.700000 36.466667 30.909441 Iversen12 SD7 1 2011-11-07 2011/12 1 54.650000 66.200000 28.200000 Iversen12 SD7 2 2011-11-07 2011/12 1 33.543750 35.550000 17.150000 Iversen12 SD7 3 2011-11-07 2011/12 1 30.406250 31.125000 16.275000 Iversen12 SD7 4 2011-11-07 2011/12 1 28.643750 30.025000 15.600000 Iversen12 SD7 5 2011-11-07 2011/12 1 28.662500 29.675000 13.225000 Iversen12 SD7 6 2011-11-07 2011/12 1 28.906250 29.300000 13.400000 Iversen12 SD7 7 2011-11-07 2011/12 1 30.506250 31.150000 16.075000 Iversen12 SD7 8 2011-11-07 2011/12 1 31.343750 31.650000 17.662461 Iversen12 SD7 9 2011-11-07 2011/12 1 30.718750 30.975000 16.085633 Iversen12 SD7 10 2011-11-07 2011/12 1 30.781250 31.025000 16.114526 Iversen12 SD7 11 2011-11-07 2011/12 1 29.362500 30.025000 16.160446 Iversen12 SD7 12 2011-11-07 2011/12 1 28.350000 28.550000 16.122284 Iversen12 SD7 13 2011-11-07 2011/12 1 29.968750 30.425000 16.194126 Iversen12 SD7 14 2011-11-07 2011/12 1 31.887500 32.150000 16.255305 Iversen12 SD7 15 2011-11-07 2011/12 1 31.825000 32.175000 15.737765 Iversen12 SD7 16 2011-11-07 2011/12 1 34.818750 34.975000 15.179791 Iversen12 SD7 17 2011-11-07 2011/12 1 36.987500 37.375000 20.575182 Iversen12 SD7 18 2011-11-07 2011/12 1 35.968750 36.375000 25.828403 Iversen12 SD7 19 2011-11-07 2011/12 1 35.093750 35.500000 28.161962 Iversen12 SD7 20 2011-11-07 2011/12 1 35.337500 35.825000 30.192152 Iversen12 SD7 21 2011-11-07 2011/12 1 34.925000 35.725000 30.370163 Iversen12 SD7 22 2011-11-07 2011/12 1 34.300000 34.500000 30.543093 Iversen12 SD8 1 2011-12-09 2011/12 2 61.650000 67.050000 31.550000 Iversen12 SD8 2 2011-12-09 2011/12 2 22.300000 31.275730 18.125000 Iversen12 SD8 3 2011-12-09 2011/12 2 21.775000 27.824114 18.325000 Iversen12 SD8 4 2011-12-09 2011/12 2 20.875000 25.713953 16.386878 Iversen12 SD8 5 2011-12-09 2011/12 2 21.000000 23.126674 15.625000 Iversen12 SD8 6 2011-12-09 2011/12 2 23.850000 23.850000 18.022141 Iversen12 SD8 7 2011-12-09 2011/12 2 26.900000 26.900000 18.940876 Iversen12 SD8 8 2011-12-09 2011/12 2 27.525000 27.525000 19.271777 Iversen12 SD8 9 2011-12-09 2011/12 2 27.400000 27.400000 20.172788 Iversen12 SD8 10 2011-12-09 2011/12 2 27.958333 28.650000 19.119654 Iversen12 SD8 11 2011-12-09 2011/12 2 26.537500 26.825000 16.276082 Iversen12 SD8 12 2011-12-09 2011/12 2 23.050000 23.525000 13.393442 Iversen12 SD8 13 2011-12-09 2011/12 2 20.987500 21.700000 13.783343 Iversen12 SD8 14 2011-12-09 2011/12 2 22.987500 23.550000 14.170136 Iversen12 SD8 15 2011-12-09 2011/12 2 24.550000 25.175000 16.230879 Iversen12 SD8 16 2011-12-09 2011/12 2 26.287500 26.450000 20.744084 Iversen12 SD8 17 2011-12-09 2011/12 2 30.725000 30.875000 26.060516 Iversen12 SD8 18 2011-12-09 2011/12 2 35.700000 36.050000 31.110265 Iversen12 SD8 19 2011-12-09 2011/12 2 36.600000 36.700000 31.113278 Iversen12 SD8 20 2011-12-09 2011/12 2 35.662500 35.800000 31.091762 Iversen12 SD8 21 2011-12-09 2011/12 2 35.537500 36.125000 30.768349 Iversen12 SD8 22 2011-12-09 2011/12 2 35.512500 35.575000 30.991331 Iversen12 SD9 1 2012-01-10 2011/12 0 49.200000 68.300000 38.600000 Iversen12 SD9 2 2012-01-10 2011/12 0 34.241667 35.425000 25.260629 Iversen12 SD9 3 2012-01-10 2011/12 0 29.650000 30.600000 22.314521 Iversen12 SD9 4 2012-01-10 2011/12 0 25.916667 26.325000 19.718087 Iversen12 SD9 5 2012-01-10 2011/12 0 23.950000 24.200000 18.433114 Iversen12 SD9 6 2012-01-10 2011/12 0 24.950000 25.125000 17.943447 Iversen12 SD9 7 2012-01-10 2011/12 0 25.683333 26.325000 19.392640 Iversen12 SD9 8 2012-01-10 2011/12 0 22.825000 22.875000 17.514878 Iversen12 SD9 9 2012-01-10 2011/12 0 22.000000 22.300000 18.223176 Iversen12 SD9 10 2012-01-10 2011/12 0 23.550000 23.825000 19.118117 Iversen12 SD9 11 2012-01-10 2011/12 0 23.233333 23.575000 18.257147 Iversen12 SD9 12 2012-01-10 2011/12 0 23.008333 23.400000 17.383710 Iversen12 SD9 13 2012-01-10 2011/12 0 23.608333 24.025000 18.855802 Iversen12 SD9 14 2012-01-10 2011/12 0 25.425000 25.900000 20.271084 Iversen12 SD9 15 2012-01-10 2011/12 0 28.925000 29.950000 23.763992 Iversen12 SD9 16 2012-01-10 2011/12 0 31.408333 31.658333 27.151535 Iversen12 SD9 17 2012-01-10 2011/12 0 34.716667 34.800000 28.662716 Iversen12 SD9 18 2012-01-10 2011/12 0 35.225000 35.400000 30.155653 Iversen12 SD9 19 2012-01-10 2011/12 0 35.075000 35.125000 30.653047 Iversen12 SD9 20 2012-01-10 2011/12 0 35.866667 36.275000 31.126650 Iversen12 SD9 21 2012-01-10 2011/12 0 35.925000 36.500000 30.897482 Iversen12 SD9 22 2012-01-10 2011/12 0 34.766667 35.075000 30.582304 Iversen12 SD10 1 2012-02-17 2011/12 501 49.600000 70.200000 45.150000 Iversen12 SD10 2 2012-02-17 2011/12 501 32.675000 32.675000 26.998954 Iversen12 SD10 3 2012-02-17 2011/12 501 28.425000 29.580748 24.010669 Iversen12 SD10 4 2012-02-17 2011/12 501 25.525000 27.163628 21.308168 Iversen12 SD10 5 2012-02-17 2011/12 501 24.375000 25.678606 19.962197 Iversen12 SD10 6 2012-02-17 2011/12 501 23.875000 24.250769 20.608707 Iversen12 SD10 7 2012-02-17 2011/12 501 23.550000 23.550000 21.019780 Iversen12 SD10 8 2012-02-17 2011/12 501 23.300000 23.328091 20.732897 Iversen12 SD10 9 2012-02-17 2011/12 501 22.550000 22.579082 20.244652 Iversen12 SD10 10 2012-02-17 2011/12 501 22.358333 22.553519 20.792334 Iversen12 SD10 11 2012-02-17 2011/12 501 22.752778 23.018792 21.322920 Iversen12 SD10 12 2012-02-17 2011/12 501 23.350926 23.537037 21.494065 Iversen12 SD10 13 2012-02-17 2011/12 501 22.296142 22.520959 19.385280 Iversen12 SD10 14 2012-02-17 2011/12 501 19.982047 20.376701 17.222012 Iversen12 SD10 15 2012-02-17 2011/12 501 21.131516 21.964175 20.755229 Iversen12 SD10 16 2012-02-17 2011/12 501 23.743839 24.851697 23.512857 Iversen12 SD10 17 2012-02-17 2011/12 501 26.656280 27.693073 26.132458 Iversen12 SD10 18 2012-02-17 2011/12 501 28.935426 29.011558 27.976750 Iversen12 SD10 19 2012-02-17 2011/12 501 30.607642 30.633019 29.074389 Iversen12 SD10 20 2012-02-17 2011/12 501 31.402547 31.411006 29.942125 Iversen12 SD10 21 2012-02-17 2011/12 501 31.796682 31.799502 29.984290 Iversen12 SD10 22 2012-02-17 2011/12 501 31.632227 31.633167 29.930676 try to modify apsimx file in place. Edit feature. Note: apsimx is not working properly in the bash env. 4.10 Examine the DUL and LL with original observations ## Warning: Removed 286 rows containing missing values (geom_point). ## Warning: Removed 51040 rows containing missing values (geom_hline). ## Warning: Removed 51040 rows containing missing values (geom_hline). looks reasonable. but is this too busy. ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. 4.11 20200513 kls Visulise the data to have a feel. ## `geom_smooth()` using method = &#39;loess&#39; and formula &#39;y ~ x&#39; Figure 4.1: (ref:Selected SW in selected SD in Selected site) How to deal with outliers!!! do i just assume that all the water was sucked up by the Areas within 1m of the neutron probe access tubes were also avoided. no harvest around NP? always full canopy? https://douglas-watson.github.io/post/2018-09_exponential_curve_fitting/ Eliminate the noise data 1. full canopy cover - LAI &gt; 1 2. No rainfall during the period. sw need to ask Hamish about the model-fitting exercises. Brown 2009 ## Warning: The shape palette can deal with a maximum of 6 discrete values because ## more than 6 becomes difficult to discriminate; you have 9. Consider ## specifying shapes manually if you must have them. ## Warning: Removed 11 rows containing missing values (geom_point). ## Warning: Removed 96 rows containing missing values (geom_point). ## Warning: Removed 96 rows containing missing values (geom_point). richard conversion of met file had one day off 152th of 2010 should be 2nd of June 2010 In the thesis, arbitrary dates were selected for extraction initiation and finishing. p147: Extraction began in the 0.25 m soil layer on the 25 October 2011 at both sites. p150: The EFV reached the maximum depth of measurement (2.25 m) on 23 December 2011 at Ashley Dene and 11 March 2012 at Iversen 12 Crops at both Ashley Dene and Iversen reached maximum extraction depth in late February 2012. Assumption based on the graph below. soil water content was averaged across different sowing dates in the second season. Water extraction was observed to start in early August 2011 for regrowth crops, however a large rainfall event returned SWC to DUL on 21 October 2011. Models were fitted from this point to maximum SWD which occurred on 16 January 2012 and 25 May 2012 at Ashley Dene and Iversen 12, respectively. p136 \\[SWC_t = LL + PAWC exp(-kl(t-tc)Sc)\\] ## Experiment Clock.Today mean_SW start t ## 1: AshleyDene 2011-10-21 50.30 2010-10-21 365 ## 2: AshleyDene 2011-11-03 34.03 2010-10-21 378 ## 3: AshleyDene 2011-11-16 36.85 2010-10-21 391 ## 4: AshleyDene 2011-11-28 25.30 2010-10-21 403 ## 5: AshleyDene 2011-12-12 32.45 2010-10-21 417 ## 6: AshleyDene 2011-12-23 28.12 2010-10-21 428 ## 7: AshleyDene 2012-01-05 16.63 2010-10-21 441 ## 8: AshleyDene 2012-01-16 14.64 2010-10-21 452 ## 9: AshleyDene 2012-02-01 20.06 2010-10-21 468 ## 10: AshleyDene 2012-02-15 22.37 2010-10-21 482 ## 11: AshleyDene 2012-02-28 30.96 2010-10-21 495 ## Nonlinear regression model ## model: mean_SW ~ SSasymp(t, Asym = pawc, R0 = ll, x) ## data: artificial ## pawc ll x ## 21.95 28688479.05 -3.27 ## residual sum-of-squares: 312.2 ## ## Number of iterations to convergence: 0 ## Achieved convergence tolerance: 0.000004515 ## # A tibble: 1 x 4 ## ll pawc x alpha ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 28688479. 22.0 -3.27 0.0380 is this manual curve fitting procedure robust? the rainfall definetly affect the SW in the top soils? how can we ensure that the decay is due to the plant transipiration rather than evaporation?? 4.12 20200515 More fitting trys https://rpubs.com/mengxu/exponential-model \\[SWC_t = LL + PAWC * exp(-kl(x)Sc)\\] why not \\[SWC_t = DUL - PAWC * exp(-kl(t-tc)Sc)\\] because the plant take water up rather than storing water. The SW will need to get smaller over time. ## Experiment Clock.Today SowingDate mean_SW start t ## 1: AshleyDene 2011-10-21 SD1 0.11050000 2011-10-21 0 ## 2: AshleyDene 2011-10-21 SD2 0.10200000 2011-10-21 0 ## 3: AshleyDene 2011-10-21 SD3 0.10250000 2011-10-21 0 ## 4: AshleyDene 2011-10-21 SD4 0.10825000 2011-10-21 0 ## 5: AshleyDene 2011-10-21 SD5 0.10175000 2011-10-21 0 ## 6: AshleyDene 2011-11-03 SD1 0.09450000 2011-10-21 13 ## 7: AshleyDene 2011-11-03 SD2 0.09125000 2011-10-21 13 ## 8: AshleyDene 2011-11-03 SD3 0.09725000 2011-10-21 13 ## 9: AshleyDene 2011-11-03 SD4 0.09850000 2011-10-21 13 ## 10: AshleyDene 2011-11-03 SD5 0.09100000 2011-10-21 13 ## 11: AshleyDene 2011-11-16 SD1 0.08950000 2011-10-21 26 ## 12: AshleyDene 2011-11-16 SD2 0.08700000 2011-10-21 26 ## 13: AshleyDene 2011-11-16 SD3 0.08575000 2011-10-21 26 ## 14: AshleyDene 2011-11-16 SD4 0.09300000 2011-10-21 26 ## 15: AshleyDene 2011-11-16 SD5 0.08375000 2011-10-21 26 ## 16: AshleyDene 2011-11-28 SD1 0.08775000 2011-10-21 38 ## 17: AshleyDene 2011-11-28 SD2 0.07450000 2011-10-21 38 ## 18: AshleyDene 2011-11-28 SD3 0.08000000 2011-10-21 38 ## 19: AshleyDene 2011-11-28 SD4 0.08700000 2011-10-21 38 ## 20: AshleyDene 2011-11-28 SD5 0.07950000 2011-10-21 38 ## 21: AshleyDene 2011-12-12 SD1 0.08400000 2011-10-21 52 ## 22: AshleyDene 2011-12-12 SD2 0.07025000 2011-10-21 52 ## 23: AshleyDene 2011-12-12 SD3 0.07000000 2011-10-21 52 ## 24: AshleyDene 2011-12-12 SD4 0.08375000 2011-10-21 52 ## 25: AshleyDene 2011-12-12 SD5 0.07750000 2011-10-21 52 ## 26: AshleyDene 2011-12-23 SD1 0.08150000 2011-10-21 63 ## 27: AshleyDene 2011-12-23 SD2 0.07450000 2011-10-21 63 ## 28: AshleyDene 2011-12-23 SD3 0.07125000 2011-10-21 63 ## 29: AshleyDene 2011-12-23 SD4 0.08550000 2011-10-21 63 ## 30: AshleyDene 2011-12-23 SD5 0.07625000 2011-10-21 63 ## 31: AshleyDene 2012-01-05 SD1 0.07850000 2011-10-21 76 ## 32: AshleyDene 2012-01-05 SD2 0.06825000 2011-10-21 76 ## 33: AshleyDene 2012-01-05 SD3 0.07275000 2011-10-21 76 ## 34: AshleyDene 2012-01-05 SD4 0.07975000 2011-10-21 76 ## 35: AshleyDene 2012-01-05 SD5 0.07550000 2011-10-21 76 ## 36: AshleyDene 2012-01-16 SD1 0.07475000 2011-10-21 87 ## 37: AshleyDene 2012-01-16 SD2 0.06375000 2011-10-21 87 ## 38: AshleyDene 2012-01-16 SD3 0.06675000 2011-10-21 87 ## 39: AshleyDene 2012-01-16 SD4 0.07575000 2011-10-21 87 ## 40: AshleyDene 2012-01-16 SD5 0.07225000 2011-10-21 87 ## 41: AshleyDene 2012-02-01 SD1 0.07075000 2011-10-21 103 ## 42: AshleyDene 2012-02-01 SD2 0.06450000 2011-10-21 103 ## 43: AshleyDene 2012-02-01 SD3 0.06375000 2011-10-21 103 ## 44: AshleyDene 2012-02-01 SD4 0.07225000 2011-10-21 103 ## 45: AshleyDene 2012-02-01 SD5 0.06625000 2011-10-21 103 ## 46: AshleyDene 2012-02-15 SD1 0.07100000 2011-10-21 117 ## 47: AshleyDene 2012-02-15 SD2 0.06450000 2011-10-21 117 ## 48: AshleyDene 2012-02-15 SD3 0.06575000 2011-10-21 117 ## 49: AshleyDene 2012-02-15 SD4 0.06800000 2011-10-21 117 ## 50: AshleyDene 2012-02-15 SD5 0.06375000 2011-10-21 117 ## 51: AshleyDene 2012-02-28 SD1 0.06875000 2011-10-21 130 ## 52: AshleyDene 2012-02-28 SD2 0.06625000 2011-10-21 130 ## 53: AshleyDene 2012-02-28 SD3 0.06750000 2011-10-21 130 ## 54: AshleyDene 2012-02-28 SD4 0.06950000 2011-10-21 130 ## 55: AshleyDene 2012-02-28 SD5 0.06600000 2011-10-21 130 ## 56: AshleyDene 2012-03-14 SD1 0.07190744 2011-10-21 145 ## 57: AshleyDene 2012-03-14 SD2 0.06624476 2011-10-21 145 ## 58: AshleyDene 2012-03-14 SD3 0.06741822 2011-10-21 145 ## 59: AshleyDene 2012-03-14 SD4 0.07109537 2011-10-21 145 ## 60: AshleyDene 2012-03-14 SD5 0.06775540 2011-10-21 145 ## 61: AshleyDene 2012-03-25 SD1 0.07506489 2011-10-21 156 ## 62: AshleyDene 2012-03-25 SD2 0.06623951 2011-10-21 156 ## 63: AshleyDene 2012-03-25 SD3 0.06733644 2011-10-21 156 ## 64: AshleyDene 2012-03-25 SD4 0.07269074 2011-10-21 156 ## 65: AshleyDene 2012-03-25 SD5 0.06951079 2011-10-21 156 ## 66: AshleyDene 2012-04-08 SD1 0.07284444 2011-10-21 170 ## 67: AshleyDene 2012-04-08 SD2 0.06718972 2011-10-21 170 ## 68: AshleyDene 2012-04-08 SD3 0.06773523 2011-10-21 170 ## 69: AshleyDene 2012-04-08 SD4 0.07030017 2011-10-21 170 ## 70: AshleyDene 2012-04-08 SD5 0.06598436 2011-10-21 170 ## 71: AshleyDene 2012-04-22 SD1 0.07262936 2011-10-21 184 ## 72: AshleyDene 2012-04-22 SD2 0.06639341 2011-10-21 184 ## 73: AshleyDene 2012-04-22 SD3 0.06659407 2011-10-21 184 ## 74: AshleyDene 2012-04-22 SD4 0.06932845 2011-10-21 184 ## 75: AshleyDene 2012-04-22 SD5 0.06755156 2011-10-21 184 ## 76: AshleyDene 2012-05-09 SD1 0.07229593 2011-10-21 201 ## 77: AshleyDene 2012-05-09 SD2 0.06506682 2011-10-21 201 ## 78: AshleyDene 2012-05-09 SD3 0.06619681 2011-10-21 201 ## 79: AshleyDene 2012-05-09 SD4 0.07052786 2011-10-21 201 ## 80: AshleyDene 2012-05-09 SD5 0.06639595 2011-10-21 201 ## Experiment Clock.Today SowingDate mean_SW start t ## # A tibble: 1 x 3 ## kl ll pawc ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 -0.0247 0.0712 0.0374 Seems too much effort to figure out the starting point by oneself.? selfstarting might be the way to go Asked Rodelyn about the nls and start point preparation. the online document takes two steps for fitting the curve: 1. prepara the nls a starting point by transforming it to a linear function. 2. apply the origin function in nls with the start ## Nonlinear regression model ## model: value ~ PAWC * exp(kl * t) + LL ## data: dt ## PAWC kl LL ## 0.20518 -0.05402 0.26444 ## residual sum-of-squares: 0.08121 ## ## Number of iterations to convergence: 12 ## Achieved convergence tolerance: 0.0000005231 ## [1] &quot;./R/20200515curveFittingKLs.R&quot; ## `geom_smooth()` using method = &#39;loess&#39; and formula &#39;y ~ x&#39; 4.13 Curve fitting is not going to work kl should be link to the root turnover?? YES But it cant be dynamic to reflect the real world stuiation in NZ since the cold temperature could limit the crop water uptake. why we cant make the kl calculated on the fly? monthly value probably the best you could have but suspect that it still wont reflect the real world senarios. again, temperature and open canopy. Slurp is probably the best way to go so far, since it accounts the incomplete canopy and tempareture. curving fitting is not recommended since the assumptions are very easy to be violated in NZ. 4.13.0.1 inspect all sowing dates for vwc ## Warning in `[.data.table`(data_sw, , `:=`(SWC, NULL)): Column &#39;SWC&#39; does not ## exist to remove ## [1] &quot;SWmm.1.&quot; &quot;SWmm.2.&quot; &quot;SWmm.3.&quot; &quot;SWmm.4.&quot; &quot;SWmm.5.&quot; &quot;SWmm.6.&quot; ## [7] &quot;SWmm.7.&quot; &quot;SWmm.8.&quot; &quot;SWmm.9.&quot; &quot;SWmm.10.&quot; &quot;SWmm.11.&quot; &quot;SWmm.12.&quot; ## [13] &quot;SWmm.13.&quot; &quot;SWmm.14.&quot; &quot;SWmm.15.&quot; &quot;SWmm.16.&quot; &quot;SWmm.17.&quot; &quot;SWmm.18.&quot; ## [19] &quot;SWmm.19.&quot; &quot;SWmm.20.&quot; &quot;SWmm.21.&quot; &quot;SWmm.22.&quot; Note 1. SD2 in AD seems have a consistant outliner rep in the top 40 cm soil. 2. SD7 in AD seems have a consistant outliner rep in BETWEEN 40 and 100 cm soil. 3. I12 had one rep that had some outliner through the second season in the subsoil between 110 ~ 140 cm. Question 1. How to deal with the outliners? just average them out? 2. Identify them? 4.13.0.2 20200330 Grab above ground component and soil water Unit conversion for visulising the graph in apsimx UI. ## [1] &quot;ES&quot; &quot;Phenology&quot; &quot;SoilWater&quot; &quot;SowingDates&quot; ## [5] &quot;biomass&quot; &quot;met_AshleyDene&quot; &quot;met_Iversen12&quot; &quot;meta_data&quot; ## [9] &quot;root&quot; 4.13.0.3 Look at the plot level - EDA ## Warning in dir.create(dir_EDA): cannot create dir &#39;..\\05figures\\SoilWaterEDA&#39;, ## reason &#39;No such file or directory&#39; 4.14 Evapotranspiration surface This is for calibrate the model for Potential Ep since there is no crop growing on this area? ## Warning in eval(jsub, SDenv, parent.frame()): NAs introduced by coercion 4.15 Biomass Overview The Biomass has 3124 obs for two sites. ## [1] &quot;Data&quot; &quot;Experiment&quot; &quot;Clock.Today&quot; &quot;Season&quot; ## [5] &quot;SowingDate&quot; &quot;Rep&quot; &quot;Plot&quot; &quot;Seed&quot; ## [9] &quot;Rotation.No.&quot; &quot;Harvest.No.&quot; &quot;DAS&quot; &quot;Height&quot; ## [13] &quot;Shoot.No.&quot; &quot;Total.FW..g.&quot; &quot;FW..g.&quot; &quot;DW..g.&quot; ## [17] &quot;Leaf.Area..cm.&quot; &quot;Leaf.FW..g.&quot; &quot;Leaf.DW..g.&quot; &quot;Stem.FW..g.&quot; ## [21] &quot;Stem.DW..g.&quot; &quot;TFW..g.&quot; &quot;TDW..g.&quot; &quot;Total.DM&quot; ## [25] &quot;Leaf.DM&quot; &quot;Stem.DM&quot; &quot;Shoots.m2&quot; &quot;Total.&quot; ## [29] &quot;Leaf.&quot; &quot;Stem.&quot; &quot;SLA..FW.&quot; &quot;SLA..DW.&quot; ## [33] &quot;LAI..FW.&quot; &quot;LAI..DW.&quot; &quot;LAImod&quot; &quot;Protein..g.100g.&quot; ## [37] &quot;MJME&quot; &quot;N.&quot; &quot;Shoot.N&quot; Note: Too many vars, take long time to generate the pairplot. R is a bit slow to plot big correlation plots Try seaborn in python. still slow. consider to set up Draker plan. 4.16 Root Overview The Root tab has 164 obs. "],["leaf.html", "Chapter 5 Leaf", " Chapter 5 Leaf We have finished a nice book. "],["references.html", "References", " References "]]
